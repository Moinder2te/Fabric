plugins {
    id 'fabric-loom' version "${loom_version}"
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()
    maven { url 'https://maven.fabricmc.net/' }
}

sourceSets {
    main {
        resources.srcDir("src/generated/resources")
    }
    create("datagen") {
        java.srcDir("src/datagen/java")
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }
}

configurations {
    datagenImplementation.extendsFrom implementation
    datagenRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}


tasks.register("datagen", JavaExec) {
    group = "fabric"
    description = "Runs Fabric datagen to regenerate assets and data."
    classpath = sourceSets["datagen"].runtimeClasspath
    mainClass = "net.fabricmc.fabric.impl.datagen.FabricDataGen"
    jvmArgs "-Dfabric-api.datagen", "-Dfabric-api.datagen.modid=${project.archives_base_name}"
    args "--all", "--mod", project.archives_base_name
    outputs.dir("src/generated/resources")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": inputs.properties.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    inputs.property "archivesName", project.base.archivesName

    from("LICENSE") {
        rename { "${it}_${inputs.properties.archivesName}" }
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    repositories {
    }
}
